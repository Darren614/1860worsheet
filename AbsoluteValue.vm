function AbsoluteValue.compute 0
    // Check for overflow case (x = -32768, since |−32768| = 32768 > 32767)
    push argument 0
    push constant 32768
    neg               // -32768 (smallest 16-bit signed integer)
    eq
    if-goto OVERFLOW_CASE

    // Default case (no overflow)
    push argument 0
    push constant 0
    lt                // Check if x < 0
    if-goto NEGATIVE_CASE

    // Non-negative case (x ≥ 0)
    push argument 0   // z = x
    pop argument 1    // Store in argument[1]
    push constant 0
    pop argument 2    // argument[2] = 0 (x not negative)
    push constant 0
    pop argument 3    // argument[3] = 0 (no overflow)
    goto END

    label NEGATIVE_CASE
    push argument 0
    neg               // z = -x
    pop argument 1    // Store in argument[1]
    push constant 1
    pop argument 2    // argument[2] = 1 (x was negative)
    push constant 0
    pop argument 3    // argument[3] = 0 (no overflow)
    goto END

    label OVERFLOW_CASE
    push constant 0
    pop argument 1    // argument[1] = 0 (undefined result)
    push constant 1
    pop argument 2    // argument[2] = 1 (x was negative)
    push constant 1
    pop argument 3    // argument[3] = 1 (overflow occurred)

    label END
    push argument 1   // Leave result z at the bottom of the stack
    return