// Load x and y
push argument 0
push argument 1

// Compute x OR y (stack: x|y)
or

// Re-push x and y to compute AND
push argument 0
push argument 1

// Compute x AND y (stack: x|y, x&y)
and

// Negate the AND result (stack: x|y, ¬(x&y))
not

// Compute XOR: (x|y) ∧ ¬(x&y) (stack: z)
and

// Store result in argument[2] and leave it on the stack
pop argument 2
push argument 2

